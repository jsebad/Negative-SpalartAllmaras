/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSolution;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

solvers
{
    p
    {

        solver          GAMG;
        smoother        GaussSeidel;
        tolerance       1e-6;
        relTol          0.001;	//0.01 or 0.001

/*
        solver          PBiCGStab;
        preconditioner  FDIC;
        tolerance       1e-6;
        relTol          0.01;
*/

	minIter 2;		

    }

    "(U)"
    {
        solver          PBiCGStab;
        preconditioner  DILU;
        tolerance       1e-8;
        relTol          0.0;		//0.001	
	minIter 	2;
    }

    "(e|h)"
    {
        solver          PBiCGStab;
        preconditioner  DILU;
        tolerance       1e-8;
        relTol          0.0;		//0.001
	minIter 	2;	
    }

    "(k|omega|nuTilda)"
    {
        solver          PBiCGStab;
        preconditioner  DILU;
        tolerance       1e-8;
        relTol          0.0;		//0.001 set to 0 if renumber mesh is used
	minIter 	2;
    }

}


SIMPLE
{
    consistent      yes;
    transonic       yes;

/*
    residualControl
    {
        p               	1e-4;
        U               	1e-4;
        "(k|omega|e|h)"   	1e-4;
    }
*/

    nNonOrthogonalCorrectors 1;
    pMinFactor      0.5;	//0.1-0.5
    pMaxFactor      2;		//2
    //pMin      10000;
    //pMax      600000;
}

relaxationFactors
{

urf1 0.5;
urf_rho 0.5;

    fields
    {
        //p             	$urf1;		//with consistent
        //rho             	$urf_rho;	//with consistent
    }
    equations
    {
        p               $urf1;	//if transonic used is important
        U               $urf1;	//this seems to be critical if div(phid,p) is different from upwind
        e               $urf1;
        h               $urf1;
        "(k|omega|nuTilda)"     $urf1;
    }

//base setup
/*
    fields
    {
        p               0.7;
        rho             0.01;
    }
    equations
    {
        U               0.3;
        e               0.7;
        "(k|omega)"     0.7;
    }
*/

}

// ************************************************************************* //
