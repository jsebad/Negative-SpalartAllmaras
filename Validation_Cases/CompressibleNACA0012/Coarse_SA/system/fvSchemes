/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  6
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default             steadyState;
}

gradSchemes
{
    //limited         cellMDLimited Gauss linear 1;
    limitedU         cellMDLimited Gauss linear 1;
    limitedT         cellLimited Gauss linear 1;
    limitedE         cellLimited Gauss linear 1;
				
    default         Gauss linear;
    //default         cellLimited Gauss linear 1;
    //default         cellLimited<cubic> 1.5 Gauss linear 1;

    grad(U)         $limitedU;
    //grad(p)         $limited;
    //grad(e)         $limited;
    //grad(Ekp)       $limited;
    grad(omega)     $limitedT;
    grad(k)         $limitedT;
    grad(nuTilda)   $limitedT;
}

divSchemes
{
    default         none;

    div(phi,U)      bounded Gauss Minmod;
    //div(phi,U)      bounded Gauss linearUpwind limitedU;
    //div(phi,U)      bounded Gauss linearUpwindV limitedU;

    //turbulence      bounded Gauss upwind;
    turbulence      bounded Gauss linearUpwind limitedT;

    energy          bounded Gauss linearUpwind limitedE;
    energy1         bounded Gauss limitedLinear 1;
    energy2         bounded Gauss upwind;

    div(phi,k)      $turbulence;
    div(phi,omega)  $turbulence;
    div(phi,nuTilda) $turbulence;

//enthalpy -> h
    div(phi,h)      $energy1;
    div(phi,K)      $energy1;

    //div(phid,p)     Gauss upwind;
    //div(phid,p)     Gauss LUST default;
    div(phid,p)     Gauss limitedLinear 1;
    //div(phid,p)     Gauss MUSCL;

    div(((rho*nuEff)*dev2(T(grad(U)))))    Gauss linear;

}

laplacianSchemes
{
    default         Gauss linear limited 0.5;
}

interpolationSchemes
{
    default         linear;
}

snGradSchemes
{
    default         limited 0.5;
}

wallDist
{
    method meshWave;
}

// ************************************************************************* //
